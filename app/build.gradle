apply plugin: 'com.android.application'
apply from: 'config/pack.gradle'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

apply from: 'tinker-support.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        sourceCompatibility org.gradle.api.JavaVersion.VERSION_1_8
        targetCompatibility org.gradle.api.JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.structure"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        ndk {
            moduleName "jni-hello"
            ldLibs "log", "z", "m"
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude '.readme'
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile libraries.AppCompat
    compile libraries.Retrofit
    compile libraries.OkHttp
    compile libraries.Gson
    compile libraries.RetrofitConverter
    compile libraries.RxJavaRetrofitAdapter
    compile libraries.LoggingInterceptor
    compile libraries.EventBus
    compile libraries.Picasso
    compile libraries.SupportDesign
    compile libraries.RecyclerView
    compile libraries.FlowLayout
    compile libraries.ButterKnife
    compile libraries.RxAndroid
    compile libraries.V4
    compile libraries.StorIo
    //    compile libraries.StorIoContent
    compile libraries.StorIoAnnotation
    compile libraries.StorIoAnnotationProcessor
    compile libraries.Timber
    compile libraries.SystemBarTint
    //    debugCompile libraries.Stetho
    //    debugCompile libraries.StethoOkhttp
    debugCompile libraries.LeakCanaryDebug
    releaseCompile libraries.LeakCanaryRelease

//    bugly
//    compile ('com.tencent.bugly:crashreport:latest.release')
//    hot upgrade
    compile 'com.tencent.bugly:crashreport_upgrade:latest.release'




}
